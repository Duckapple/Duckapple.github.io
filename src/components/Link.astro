---
import { Icon } from "astro-icon/components";

export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  fallback?: string;
  noIcon?: boolean;
}

const { href, class: className, fallback, noIcon, ...props } = Astro.props;

const { pathname, host, origin } = Astro.url;
const { host: newHost } = new URL(href || "", origin);

const isExt = host !== newHost; // && !newHost.includes("simon-green");
const isActive = href === pathname || href === pathname.replace(/\/$/, "");
// FML this formatting grrr
---

<a
  class:list={[
    className,
    "text-lime-700 dark:text-lime-300 group hover:text-lime-600 dark:hover:text-lime-500",
    { "underline font-bold": isActive },
  ]}
  href={href}
  title={typeof href === "string" ? href : null}
  rel={isExt ? "external noreferrer" : null}
  target={isExt ? "_blank" : null}
  {...props}
  ><span class="print:hidden group-hover:underline"><slot /></span><span
    class="hidden print:inline">{fallback ?? href}</span
  >{
    isExt && !noIcon && (
      <Icon
        class="print:hidden size-4 inline ml-1 -mt-1"
        name="mdi:open-in-new"
      />
    )
  }</a
>
